[tox]
skipsdist=True
# Run these envs when tox is invoked without -e
envlist=lint-{current}, unittest-{current,future}


[testenv]
# Factored env for running most things with a matrix of Python, Django, and
# Wagtail versions. Configuration of individual top-level factors like lint
# and unittest is done in their respective configuration sections below.
#
# Factors:
#   lint:     Lint Python files with flake8 and isort
#   unittest: Run Python unittests
#   current:  Use the current production Python, Django, Wagtail
#   future:   Use the latest production Python, Django, Wagtail
#
# These factors are expected to combine into the follow generative environments:
#
#   lint-current
#   lint-future
#   unittest-current
#   unittest-future
#
# These factors are expected to combine to be invoked with:
#
#   tox -e lint-current
#   tox -e lint-future
#   tox -e unittest-current
#   tox -e unittest-future

recreate=False

whitelist_externals=echo

basepython=
    current:  {[current-config]basepython}
    future:   {[future-config]basepython}

deps=
    current:  {[current-config]deps}
    future:   {[future-config]deps}
    lint:     {[lint-config]deps}
    unittest: {[unittest-config]deps}

passenv=
    unittest:   {[unittest-config]passenv}

setenv=
    unittest: {[unittest-config]setenv}

commands=
    lint:     {[lint-config]commands}
    unittest: {[unittest-config]commands}


[lint-config]
# Configuration necessary to lint Python files.
# Note: This is not an env and will not run if invoked. Use:
#
#   tox -e lint-{current, future}
#
# To run Python linting.
deps=
    flake8
    isort
commands=
    flake8 crtool
    isort --check-only --diff crtool


[unittest-config]
# Configuration necessary to run unittests.
# Note: This is not an env and will not run if invoked. Use:
#
#   tox -e unittest-{current, future}
#
# To run unit tests.
install_command=pip install -e ".[testing]" -U {opts} {packages}
passenv=
    TRAVIS TRAVIS_JOB_ID TRAVIS_BRANCH TEST_DATABASE_URL TEST_RUNNER
setenv=
    DJANGO_SETTINGS_MODULE=teachers_digital_platform.tests.settings
    PYTHONPATH={toxinidir}/cfgov-refresh/cfgov:{env:PYTHONPATH:}
    DATABASE_URL={env:DATABASE_URL:postgres://cfpb:cfpb@localhost/cfgov}
deps=
    current: {[current-config]deps}
commands=
    ./install_cfgov_refresh.sh
    coverage erase
    coverage run --source='teachers_digital_platform' {envbindir}/django-admin.py test {posargs}
    coverage report -m


[current-config]
# Configuration necessary for the production versions Python, Django and 
# Wagtail
# Note: This is not an env and will not run if invoked. Use:
# 
#   tox -e unittest-current
#   tox -e unittest
# 
# To run unittests with the current production versions.
basepython=python3.6
deps=
    Django>=2.2,<2.3
    wagtail>=2.5,<2.6


[future-config]
# Configuration necessary for upcoming versions of Python, Django, and 
# Wagtail. This is the place where the "future" dependencies will need to be 
# modified when we're ready to track new versions of Python, Django, or 
# Wagtail.
# Note: This is not an env and will not run if invoked. Use:
# 
#   tox -e unittest-future
# 
# To run unittests with the upcoming versions specified here.
basepython=python3.6
deps=
    Django>=2.2,<2.3
    wagtail>=2.5,<2.6


[testenv:unittest-future]
# Invoke with: tox -e unittest-future
recreate=False
basepython={[future-config]basepython}
envdir={toxworkdir}/unittest-future
deps=
    {[future-config]deps}
commands={[unittest-config]commands}


[testenv:unittest]
# Invoke with: tox -e unittest
# This should run identically to tox -e unittest-current
recreate=False
basepython={[current-config]basepython}
envdir={toxworkdir}/unittest-current
deps=
    {[current-config]deps}
    {[unittest-config]deps}
commands={[unittest-config]commands}


[testenv:lint]
# Invoke with: tox -e lint
# This should run identically to tox -e lint-current
recreate=False
basepython={[current-config]basepython}
envdir={toxworkdir}/lint-current
deps={[lint-config]deps}
commands={[lint-config]commands}

[flake8]
ignore=
    # Allow assigning lambda expressions
    E731,
    # Allow line breaks after binary operators
    W503,
    W504
exclude=
    # Some of this are excluded for speed of directory traversal
    # Not all of them have Python files we wish to ignore
    .git,
    .tox,
    __pycache__,
    gulp,
    node_modules,
    ./cfgov-refresh,
    */migrations/*.py,
    .eggs/*,

[isort]
combine_as_imports=1
lines_after_imports=2
include_trailing_comma=1
multi_line_output=3
skip=.tox,migrations
use_parentheses=1
known_django=django,haystack
known_first_party=cfgov,v1
known_future_library=future
known_wagtail=wagtail,wagtailsharing
default_section=THIRDPARTY
sections=FUTURE,STDLIB,DJANGO,WAGTAIL,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
